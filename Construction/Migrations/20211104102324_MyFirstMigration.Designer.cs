// <auto-generated />
using Construction.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Construction.Migrations
{
    [DbContext(typeof(ConstructionContext))]
    [Migration("20211104102324_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Construction.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("numberOfFloors")
                        .HasColumnType("INTEGER");

                    b.Property<int>("numberOfUnits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("projectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("projectId");

                    b.ToTable("buildings");
                });

            modelBuilder.Entity("Construction.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("phoneNumbers");
                });

            modelBuilder.Entity("Construction.Models.PoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("closed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("location")
                        .HasColumnType("TEXT");

                    b.Property<int>("numberOfBuildings")
                        .HasColumnType("INTEGER");

                    b.Property<int>("numberOfUnits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("projectName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Construction.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("area")
                        .HasColumnType("INTEGER");

                    b.Property<int>("numberOfRooms")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("units");
                });

            modelBuilder.Entity("Construction.Models.Building", b =>
                {
                    b.HasOne("Construction.Models.PoneNumber", "project")
                        .WithMany("Buildings")
                        .HasForeignKey("projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");
                });

            modelBuilder.Entity("Construction.Models.Unit", b =>
                {
                    b.HasOne("Construction.Models.Building", "building")
                        .WithMany("units")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("building");
                });

            modelBuilder.Entity("Construction.Models.Building", b =>
                {
                    b.Navigation("units");
                });

            modelBuilder.Entity("Construction.Models.PoneNumber", b =>
                {
                    b.Navigation("Buildings");
                });
#pragma warning restore 612, 618
        }
    }
}
